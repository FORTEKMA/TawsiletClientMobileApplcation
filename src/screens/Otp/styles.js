import { StyleSheet ,Dimensions} from 'react-native';
import { colors } from '../../utils/colors';
import { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';
const WIDTH=Dimensions.get("screen").width - wp(20);

export const styles = StyleSheet.create({
  // Layout styles
  safeArea: {
    flex: 1,
    backgroundColor: colors.backgroundPrimary,
  },
  keyboardAvoidingView: {
    flex: 1,
  },
  scrollView: {
    flex: 1,
  },
  spacer: {
    height: hp(10),
  },
  
  container: {
    flex: 1,
    backgroundColor: colors.backgroundPrimary,
    paddingHorizontal: wp(5),
    paddingTop: hp(2),
  },
  backButton: {
    padding: wp(2),
  },
  titleContainer: {
    marginTop: hp(2),
    marginBottom: hp(4),
  },
  otpContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: hp(4),
  },
  otpInput: {
    width: wp(18),
    height: wp(18),
    borderWidth: 1,
    borderColor: colors.borderLight,
    borderRadius: 12,
    textAlign: 'center',
    fontSize: hp(2.8),
    color: colors.textPrimary,
    backgroundColor: colors.backgroundSecondary,
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  resendContainer: {
    alignItems: 'center',
    marginBottom: hp(3),
  },
  resendText: {
    color: colors.textSecondary,
    fontSize: hp(1.8),
    marginBottom: hp(1),
  },
  timerContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: colors.backgroundSecondary,
    paddingHorizontal: wp(3),
    paddingVertical: hp(1),
    borderRadius: 20,
    borderWidth: 1,
    borderColor: colors.borderLight,
  },
  timerIcon: {
    marginRight: wp(1.5),
  },
  timerText: {
    color: colors.textSecondary,
    fontSize: hp(1.7),
  },
  timerCount: {
    color: colors.textPrimary,
    fontWeight: '700',
  },
  resendButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: colors.backgroundSecondary,
    paddingHorizontal: wp(3),
    paddingVertical: hp(1),
    borderRadius: 20,
    borderWidth: 1,
    borderColor: colors.borderLight,
  },
  resendIcon: {
    marginRight: wp(1.5),
  },
  resendButtonText: {
    color: colors.uberBlue,
    fontWeight: '700',
    fontSize: hp(1.7),
  },
  btn: {
    backgroundColor: colors.uberBlack,
    borderRadius: 12,
    padding: hp(2),
    alignItems: 'center',
    justifyContent: 'center',
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 8,
    elevation: 4,
  },
  btnDisabled: {
    opacity: 0.6,
  },
  btnText: {
    color: colors.textInverse,
    fontWeight: '700',
    fontSize: hp(2),
  },
  errorText: {
    color: colors.error,
    fontSize: hp(1.8),
    marginTop: hp(1),
    textAlign: 'left',
    marginBottom: hp(1),
  },
  title: {
    fontSize: hp(3.2),
    fontWeight: '700',
    color: colors.textPrimary,
    textAlign: 'left',
    marginBottom: hp(1),
    marginTop: hp(2),
  },
  subtitle: {
    color: colors.textSecondary,
    fontSize: hp(1.8),
    textAlign: 'left',
    marginBottom: hp(0.5),
  },
  phoneNumber: {
    fontWeight: '700',
    color: colors.textPrimary,
    fontSize: hp(1.8),
  },
  editPhoneLinkContainer: {
    alignSelf: 'flex-start',
    marginTop: hp(0.5),
    marginBottom: hp(1),
  },
  editPhoneLink: {
    color: colors.uberBlue,
    fontSize: hp(1.8),
    textAlign: 'left',
    textDecorationLine: 'underline',
    fontWeight: '600',
  },
  otpInputContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: hp(1),
    marginTop: hp(1),
  },
  otpInput: {
    width: WIDTH / 4,
    height: WIDTH / 4,
    borderWidth: 1,
    borderColor: colors.borderLight,
    borderRadius: 12,
    marginHorizontal: wp(1.5),
    backgroundColor: colors.backgroundSecondary,
    textAlign: 'center',
    fontSize: hp(2.8),
    color: colors.textPrimary,
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  otpInputError: {
    borderColor: colors.error,
    backgroundColor: colors.errorLight,
  },
  otpInputText: {
    fontSize: hp(2.8),
    color: colors.textPrimary,
    fontWeight: '700',
  },
  helpText: {
    color: colors.textSecondary,
    fontSize: hp(1.8),
    textAlign: 'left',
    marginBottom: hp(2),
    marginTop: hp(0.5),
  },
  resendContinueRow: {
    flexDirection: 'row-reverse',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: hp(1),
    marginBottom: hp(1),
  },
  resendButton: {
    borderColor: colors.borderMedium,
    flex: 1,
    borderWidth: 1,
    borderRadius: 12,
    paddingVertical: hp(2.5),
    alignItems: 'center',
    marginHorizontal: wp(1),
    backgroundColor: colors.backgroundSecondary,
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  resendButtonDisabled: {
    opacity: 0.6,
    borderColor: colors.borderLight,
  },
  resendButtonText: {
    color: colors.textSecondary,
    fontSize: hp(1.8),
    fontWeight: '600',
  },
  continueButton: {
    flex: 1,
    backgroundColor: colors.uberBlack,
    borderRadius: 12,
    paddingVertical: hp(2.5),
    alignItems: 'center',
    marginHorizontal: wp(1),
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 8,
    elevation: 4,
  },
  continueButtonDisabled: {
    opacity: 0.6,
  },
  continueButtonText: {
    color: colors.textInverse,
    fontSize: hp(2),
    fontWeight: '700',
  },
  bottomButtonsContainer: {
    padding: wp(4),
    backgroundColor: colors.backgroundPrimary,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  resendCountdown: {
    color: colors.textSecondary,
    fontSize: hp(1.8),
    fontWeight: '700',
  },

  // Modal styles
  modal: {
    justifyContent: 'flex-end',
    margin: 0,
  },
  modalContent: {
    backgroundColor: colors.backgroundPrimary,
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    padding: wp(6),
  },
  modalHandle: {
    alignItems: 'center',
    marginBottom: hp(1.5),
  },
  modalHandleBar: {
    width: wp(10),
    height: 5,
    borderRadius: 3,
    backgroundColor: colors.borderMedium,
    marginBottom: hp(1),
  },
  modalTitle: {
    fontSize: hp(2.5),
    fontWeight: '700',
    textAlign: 'center',
    marginBottom: hp(1),
    color: colors.textPrimary,
  },
  modalSubtitle: {
    color: colors.textSecondary,
    fontSize: hp(1.7),
    textAlign: 'center',
    marginBottom: hp(2),
  },
  methodOption: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: colors.backgroundSecondary,
    borderWidth: 1,
    borderColor: colors.borderLight,
    borderRadius: 12,
    padding: hp(2),
    marginBottom: hp(1.5),
    gap: wp(2),
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  methodOptionSelected: {
    backgroundColor: colors.uberBlueLight,
    borderColor: colors.uberBlue,
    borderWidth: 2,
  },
  methodText: {
    fontSize: hp(1.8),
    color: colors.textPrimary,
    fontWeight: '600',
    flex: 1,
    textAlign: 'right',
  },
  confirmButton: {
    backgroundColor: colors.uberBlack,
    borderRadius: 12,
    padding: hp(1.8),
    alignItems: 'center',
    marginTop: hp(1),
    shadowColor: colors.uberBlack,
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 8,
    elevation: 4,
  },
  confirmButtonDisabled: {
    backgroundColor: colors.borderMedium,
    opacity: 0.6,
  },
  confirmButtonText: {
    color: colors.textInverse,
    fontSize: hp(1.9),
    fontWeight: '700',
  },
  confirmButtonTextDisabled: {
    color: colors.textSecondary,
  },
});


